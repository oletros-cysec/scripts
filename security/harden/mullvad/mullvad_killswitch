#!/bin/bash
# root: y

############

# Old Values

# old backup DNS: 193.138.218.74
# old api port: 1234

############

grey="\\e[1;90m"
red="\\e[1;91m"
green="\\e[1;92m"
orange="\\e[1;93m"
blue="\\e[1;94m"
purple="\\e[1;95m"
cyan="\\e[1;96m"
white="\\e[1;97m"
end="\\e[0;0m"

rnd=`tr -dc "a-z0-9" < /dev/urandom | head -c16`

############

need_root() {
	if [ "$UID" != "0" ]; then
		zenity --error --title "Mullvad KillSwitch - Setup" --text "Root is needed using su. Run this script as root!" 2>/dev/null
		exit 1
	fi
}

need_root

############

install_dep() {
	checkdep=`which iptables`
	if [ "$checkdep" == "" ]; then
		apt install iptables ip6tables
		
	fi
	
	checkinitscripts=`dpkg -s initscripts | grep 'install ok installed'`
	if [ "$checkinitscripts" == "" ]; then
		apt install initscripts
	fi
	
	checkinitscripts=`dpkg -s jq | grep 'install ok installed'`
	if [ "$checkinitscripts" == "" ]; then
		apt install jq
	fi
}

install_dep

############

get_user_agent() {
	uadefault=false
	uaff=""
	useragent=""
	
	checkesrfolder=`find $HOME/.mozilla/firefox -type d -name '*.default-esr' | head -1`
	checknightlyfolder=`find $HOME/.mozilla/firefox -type d -name '*.default-nightly' | head -1`
	
	if [ "$checkesrfolder" != "" ]; then
		uadefault=false
		uaff="esr"
	elif [ "$checkesrfolder" != "" ]; then
		uadefault=false
		uaff="nightly"
	else
		uadefault=true
	fi
	
	if [ "$uaff" == "esr" ]; then
		esrprefs="$checkesrfolder/prefs.js"
		esrchekuaprefs=`cat "$esrprefs" | grep 'user_pref("devtools.responsive.userAgent"' | cut -d'"' -f4`
		
		if [ "$esrchekuaprefs" != "" ]; then
			useragent="$esrchekuaprefs"
		else
			uadefault=true
		fi
	elif [ "$uaff" == "nightly" ]; then
		nightlyprefs="$checknightlyfolder/prefs.js"
		nightlychekuaprefs=`cat "$nightlyprefs" | grep 'user_pref("devtools.responsive.userAgent"' | cut -d'"' -f4`
		
		if [ "$nightlychekuaprefs" != "" ]; then
			useragent="$nightlychekuaprefs"
		else
			uadefault=true
		fi
	else
		uadefault=true
	fi
	
	if ($uadefault) || [ "$useragent" == "" ]; then
		useragent='Mozilla/5.0 (Windows NT 10.0; rv:91.0) Gecko/20100101 Firefox/91.0'
	fi
	
	echo "$useragent"
}

useragent=`get_user_agent`

############

function_status_msg() {
	echo -e "$purple""\t~> $1""$end"
}

############

get_openvpn_list_ip() {
	function_status_msg "Get all relays"
	
	curl -L -s -A "$useragent" "https://api.mullvad.net/www/relays/all/" > /tmp/relays_$rnd.txt
	
	function_status_msg "Extract good ones"
	
	ips=""
	ipbs=""
	i=1

	while (true)
	do
		echo -e "$purple""Entry $i""$end"
		
		active=`cat /tmp/relays_$rnd.txt | jq .[$i].active | sed 's;";;g'`
		type=`cat /tmp/relays_$rnd.txt | jq .[$i].type | sed 's;";;g'`
		hostnamebr=`cat /tmp/relays_$rnd.txt | jq .[$i].hostname | sed 's;";;g' | grep -Eo "\-.*\-br\-.*"`
		
		if [ "$hostnamebr" != "" ] && [ "$type" == "bridge" ]; then
			echo -e "$cyan""Bridge""$end"
			
			actualipb=`cat /tmp/relays_$rnd.txt | jq .[$i].ipv4_addr_in | sed 's;";;g'`
			
			if [ "$ipbs" == "" ]; then
				ipbs="$actualipb"
			else
				ipbs="$ipbs,$actualipb"
			fi
		fi
		
		if [ "$active" == "true" ] && [ "$type" == "openvpn" ]; then
			echo -e "$green""OK""$end"
			
			actualip=`cat /tmp/relays_$rnd.txt | jq .[$i].ipv4_addr_in | sed 's;";;g'`
			
			if [ "$ips" == "" ]; then
				ips="$actualip"
			else
				ips="$ips,$actualip"
			fi
		elif [ "$active" == "null" ]; then
			echo -e "$orange""End""$end"
			break
		else
			echo -e "$red""KO""$end"
		fi
		
		let i=i+1
	done
	
	function_status_msg "Save the result in temp file"
	
	echo "$ips" > /tmp/mullvad_ips_$rnd.txt
	echo "$ipbs" > /tmp/mullvad_ipbs_$rnd.txt
}

get_openvpn_list_ip

############

ipbs=`cat "/tmp/mullvad_ipbs_$rnd.txt"`

# Ports are not supposed to be changed
portsudp="53,1194,1195,1196,1197,1300,1301,1302"
portstcp="53,443"

portstcpapi=""

# doh.mullvad.net has address 194.242.2.2
iptcpapi="$ipbs,194.242.2.2"

############

zenity --question --title "Mullvad KillSwitch - Setup" --text "Informations:\n- use only if version is > 2018.5\n- patch the api issue from 2022.2\nDo you want to continue?" 2>/dev/null

verification=`echo $?`
if [ "$verification" == "1" ]; then
	exit 0
fi

############

ipaddresses=`cat "/tmp/mullvad_ips_$rnd.txt"`

############

if [ -e /etc/init.d/killswitch ]; then
	zenity --error --title "Mullvad KillSwitch - Setup" --text "Script already setup!" --width 300 --height 150 2>/dev/null
	choixscript=`zenity --list --title "Mullvad KillSwitch - Setup" --text "Do you want to continue?\nIf yes, the actual killswitch will be deleted!" --radiolist --column "Choice" --column "Options" TRUE "Yes" FALSE "No" 2>/dev/null`
	if [ "$choixscript" == "Yes" ]; then
		rm -f /etc/init.d/killswitch
		update-rc.d killswitch remove
	elif [ "$choixscript" == "No" ]; then
		exit 0
	else
		exit 1
	fi
fi
	
touch /etc/init.d/killswitch
chmod +x /etc/init.d/killswitch
	
echo '#!/bin/sh -e

### BEGIN INIT INFO
# Provides:          killswitch
# Required-Start:    $network $remote_fs $syslog
# Required-Stop:     $network $remote_fs $syslog
# Should-Start:      network-manager
# Should-Stop:       network-manager
# X-Start-Before:    $x-display-manager gdm kdm xdm wdm ldm sdm nodm
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Mullvad KillSwitch
# Description:       Mullvad KillSwitch using iptables. IPv6 is totally forbidden.
### END INIT INFO
' > /etc/init.d/killswitch

echo '# IPv6: KO
ip6tables -P OUTPUT DROP
ip6tables -P INPUT DROP
' >> /etc/init.d/killswitch
	
localhost=`zenity --entry --title "Mullvad KillSwitch - Setup" --text "Local interface (default value will be lo):" 2>/dev/null`
if [ "$localhost" == "" ]; then
	localhost="lo"
fi
	
vpntunnel=`zenity --entry --title "Mullvad KillSwitch - Setup" --text "VPN interface (default value will be tun):" 2>/dev/null`
if [ "$vpntunnel" == "" ]; then
	vpntunnel="tun"
fi
	
echo "# IPv4: OK
iptables -P OUTPUT DROP
iptables -A OUTPUT -o $vpntunnel+ -j ACCEPT
iptables -A INPUT -i $localhost -j ACCEPT
iptables -A OUTPUT -o $localhost -j ACCEPT
iptables -A OUTPUT -d 255.255.255.255 -j ACCEPT
iptables -A INPUT -s 255.255.255.255 -j ACCEPT
" >> /etc/init.d/killswitch

while [ "1" = "1" ]
do

addinterface=`zenity --width 300 --height 200 --list --title "Mullvad KillSwitch - Setup" --text "Add an network interface" --column Choice "All available" "Custom" "Exit" 2>/dev/null`

if [ "$addinterface" = "All available" ]; then
	for iface in `ifconfig | grep mtu | cut -d':' -f1 | uniq -i`
	do
		if [ "$iface" != "$localhost" ] && [[ $iface != *$vpntunnel* ]]; then
			if [ "$portstcpapi" == "" ]; then
				echo "iptables -A OUTPUT -o $iface -p udp -m multiport --dports $portsudp -d $ipaddresses -j ACCEPT
iptables -A OUTPUT -o $iface -p tcp -m multiport --dports $portstcp -d $iptcpapi,$ipaddresses -j ACCEPT
" >> /etc/init.d/killswitch
			else
				echo "iptables -A OUTPUT -o $iface -p udp -m multiport --dports $portsudp -d $ipaddresses -j ACCEPT
iptables -A OUTPUT -o $iface -p tcp -m multiport --dports $portstcp,$portstcpapi -d $iptcpapi,$ipaddresses -j ACCEPT
" >> /etc/init.d/killswitch
			fi
				
			zenity --info --title "Mullvad KillSwitch - Setup" --text "Interface $iface added" 2>/dev/null
				
			udevadm test-builtin net_id /sys/class/net/$iface > /tmp/killswitch_$rnd.txt
			ifnamesiface=`cat /tmp/killswitch_$rnd.txt | grep 'ID_NET_NAME_PATH' | cut -d'=' -f2`
				
			if [ "$ifnamesiface" != "" ] && [ "$ifnamesiface" != "$iface" ]; then
				if [ "$portstcpapi" == "" ]; then
					echo "iptables -A OUTPUT -o $ifnamesiface -p udp -m multiport --dports $portsudp -d $ipaddresses -j ACCEPT
iptables -A OUTPUT -o $ifnamesiface -p tcp -m multiport --dports $portstcp -d $iptcpapi,$ipaddresses -j ACCEPT
" >> /etc/init.d/killswitch
				else
					echo "iptables -A OUTPUT -o $ifnamesiface -p udp -m multiport --dports $portsudp -d $ipaddresses -j ACCEPT
iptables -A OUTPUT -o $ifnamesiface -p tcp -m multiport --dports $portstcp,$portstcpapi -d $iptcpapi,$ipaddresses -j ACCEPT
" >> /etc/init.d/killswitch
				fi

				zenity --info --title "Mullvad KillSwitch - Setup" --text "Interface (IFNAMES) $ifnamesiface added" 2>/dev/null
			fi
				
			if [ -e /tmp/killswitch_$rnd.txt ]; then
				rm /tmp/killswitch_$rnd.txt
			fi
		fi
	done

elif [ "$addinterface" = "Custom" ]; then
	iface=`zenity --entry --title "Mullvad KillSwitch - Setup" --text "Interface Ã  ajouter :" 2>/dev/null`
	if [ "$iface" == "" ]; then
		rm /etc/init.d/killswitch
		zenity --error --title "Mullvad KillSwitch - Setup" --text "You had to choose!" --width 300 --height 150 2>/dev/null
		exit 1
	fi
		
	if [ "$portstcpapi" == "" ]; then
		echo "iptables -A OUTPUT -o $iface -p udp -m multiport --dports $portsudp -d $ipaddresses -j ACCEPT
iptables -A OUTPUT -o $iface -p tcp -m multiport --dports $portstcp -d $iptcpapi,$ipaddresses -j ACCEPT
" >> /etc/init.d/killswitch
	else
		echo "iptables -A OUTPUT -o $iface -p udp -m multiport --dports $portsudp -d $ipaddresses -j ACCEPT
iptables -A OUTPUT -o $iface -p tcp -m multiport --dports $portstcp,$portstcpapi -d $iptcpapi,$ipaddresses -j ACCEPT
" >> /etc/init.d/killswitch
	fi
		
	zenity --info --title "Mullvad KillSwitch - Setup" --text "Interface $iface added" 2>/dev/null

elif [ "$addinterface" = "Exit" ]; then
	break

else
	if [ -e /etc/init.d/killswitch ]; then
		rm /etc/init.d/killswitch
	fi
	
	exit 1	
fi

done
	
update-rc.d killswitch defaults
bash /etc/init.d/killswitch

############

if [ -e /tmp/mullvad_ips_$rnd.txt ]; then
	rm /tmp/mullvad_ips_$rnd.txt
fi

if [ -e /tmp/mullvad_ipbs_$rnd.txt ]; then
	rm /tmp/mullvad_ipbs_$rnd.txt
fi

############

zenity --info --title "Mullvad KillSwitch - Setup" --text "Done" 2>/dev/null
exit 0
